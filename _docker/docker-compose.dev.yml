version: '3.8'
services:

  app:
    restart: unless-stopped
    networks:
      - web-dev
    volumes:
      - ./:/var/www/html:cached
    depends_on:
      - "mysql"
      - "redis"
    environment:
      - PHP_POOL_NAME=app-www
    ports:
      - '${FORWARD_APP_PORT:-80}:80'
      - '${FORWARD_APP_PORT_SECURE:-443}:443'

  mysql:
    restart: unless-stopped
    networks:
      - web-dev
    environment:
        MYSQL_ROOT_PASSWORD: 'rootpassword'
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      # Add volume for all database files
      - ./_docker/volumes/mysql/database_data/:/var/lib/mysql
      # Add volume for custom configurations
      - ./_docker/volumes/mysql/conf.d/:/etc/mysql/conf.d
      - ./_docker/volumes/mysql/docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'

  redis:
    restart: unless-stopped
    command: "redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redispassword}"
    volumes:
      - ./_docker/volumes/redis/data:/data
    networks:
      - web-dev
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'

  mailhog:
    restart: unless-stopped
    image: mailhog/mailhog
    networks:
      - web-dev
    logging:
      driver: 'none'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025' # smtp server
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025' # web ui

networks:
  web-dev:
    driver: bridge
